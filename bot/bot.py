import asyncio
import logging

from dataclasses import dataclass

from aiogram.filters import CommandStart
from aiogram.types import Message

from aiogram import Bot, Dispatcher
from data.database import Database
from config import Config, load_config

from aiogram.types import InlineKeyboardButton
from aiogram.types.web_app_info import WebAppInfo
from aiogram.utils.keyboard import InlineKeyboardBuilder

@dataclass
class lexicon:
    #—Ñ—Ä–∞–∑—ã
    start = '<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!‚ôª</b>\n\n–í—ã –æ—á–µ–Ω—å –∞–∫—Ç–∏–≤–Ω—ã–π –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫, —Ç–∞–∫ –∫–∞–∫ —Ä–µ—à–∏–ª–∏ –ø–æ–º–æ–≥–∞—Ç—å –Ω–∞—à–µ–º—É –≥–æ—Ä–æ–¥—É —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è —á–∏—â–µ –∏ –ø—Ä–∏—è—Ç–Ω–µ–µ.\n\n–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±–∏—Ä–∞–µ—Ç–µ –Ω–∞—Åü§ç'
    sorry = '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –í–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é :(\n\n–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µü§ç'
    # –∫–Ω–æ–ø–∫–∏
    webapp_button = '–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'

config: Config = load_config()

bot: Bot = Bot(token=config.tg_bot.token,
               parse_mode='HTML')
base = Database(config.db.database)
url = config.url

#—Å—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
app_btn = InlineKeyboardButton(text=lexicon.webapp_button, web_app=WebAppInfo(url=url))
start_keyboard = InlineKeyboardBuilder().row(app_btn).as_markup()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä
logger = logging.getLogger(__name__)
dp: Dispatcher = Dispatcher()

@dp.message(CommandStart())
async def start_answer(message: Message):
    base.add_user(message.from_user.id, message.from_user.first_name)
    await message.answer(text=lexicon.start, reply_markup=start_keyboard)

@dp.message()
async def other(message: Message):
    await message.answer(text=lexicon.sorry, reply_markup=start_keyboard)

# –§—É–Ω–∫—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    logging.basicConfig(
        level=logging.INFO,
        format='%(filename)s:%(lineno)d #%(levelname)-8s '
               '[%(asctime)s] - %(name)s - %(message)s')

    # –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—á–∞–ª–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
    logger.info('Starting bot')

    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞–∫–æ–ø–∏–≤—à–∏–µ—Å—è –∞–ø–¥–µ–π—Ç—ã –∏ –∑–∞–ø—É—Å–∫–∞–µ–º polling
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())